spring:
  web:
    resources:
      # 🚫 關閉預設 /static、/public 等靜態路徑
      add-mappings: false

    cors:
      # 🪄 把 CorsWebFilter / CorsConfiguration 的設定
      #     自動注入到 Spring Security 4xx/5xx 回應
      add-to-spring-security: true

  cloud:
    consul:
      discovery:
        health-check-path: /actuator/health
        ip-address: ${SERVICE_IP:127.0.0.1} # IP 地址，優先使用外部傳入的環境變數

    gateway:
      server:
        webflux:
          default-filters:
            - StripPrefix=1 # 移除路徑中的第一層前綴
          routes:
            # 授權伺服器路由
            - id: authn-service
              uri: lb://authn-service # 通過負載均衡器指向 `authn-service`
              predicates:
                - Path=/authn/** # 匹配以 /authn/ 開頭的請求路徑
              filters:
                - RedirectUriValidationFilter # 自定義過濾器，用於檢查 `redirect_uri` 是否合法

            # 授權檢查服務路由
            - id: authz-service
              uri: lb://authz-service # 負載均衡到 `authz-service`
              predicates:
                - Path=/authz/** # 匹配 /authz/ 開頭的請求

            # 權限處理服務路由
            - id: authp-service
              uri: lb://authp-service # 負載均衡到 `authp-service`
              predicates:
                - Path=/authp/** # 匹配 /authp/ 開頭的請求

            # 黑名單服務路由
            - id: blacklist-service
              uri: lb://blacklist-service # 負載均衡到 `blacklist-service`
              predicates:
                - Path=/blacklist/** # 匹配 /blacklist/ 開頭的請求

            # 待辦事項服務路由
            - id: todo-service
              uri: lb://todo-service
              predicates:
                - Path=/todo/**

            # BizForm 服務路由
            - id: VitalBizFormService
              uri: lb://VitalBizFormService # 負載均衡到 `bizform-service`
              predicates:
                - Path=/bizform/** # 匹配 /bizform/ 開頭的請求
              filters:
                - CacheRequestBody=String

            # Genogram 服務路由 家系圖
            - id: GenogramService
              uri: lb://GenogramService # 負載均衡到 `genogram-service`
              predicates:
                - Path=/genogram/** # 匹配 /genogram/ 開頭的請求

            # mail 服務路由
            - id: MailService
              uri: lb://MailService # 負載均衡到 `mail-service`
              predicates:
                - Path=/mail/** # 匹配 /mail/ 開頭的請求

  data:
    redis:
      host: ${REDIS_HOST:localhost} # Redis 主機地址，支持外部環境變數配置
      port: ${REDIS_PORT:6379}      # Redis 默認端口
      password: ${REDIS_PASSWORD:GssAuthRedis111}  # Redis 密碼，留空表示無密碼
      timeout: 5s  # 設定連線超時為 5 秒
      lettuce:
        pool:
          max-active: 50      # 最大連接數
          max-idle: 15        # 最大空閒連接數
          min-idle: 5         # 最小空閒連接數
          max-wait: 2000ms    # 最大等待時間

jwt:
  issuer: ${JWT_ISSUER_URI:http://localhost:8080/authn} # JWT 簽發者的 URI
  jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/authn/jwks/publicKey} # JWK 公鑰的 URI
  signature-algorithm: ES256 # 使用 EC（橢圓曲線）簽名算法
  time-skew:
    seconds: 60 # 時間偏移，允許 JWT 驗證時容忍的時差
  valid:
    audiences: ${JWT_VALID_AUDIENCES:http://localhost:8080} # JWT 的受眾驗證

test:
  depot-id: cspsd_test