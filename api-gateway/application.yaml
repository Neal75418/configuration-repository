server:
  port: 8080

spring:
  web:
    resources:
      add-mappings: false
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        health-check-path: /actuator/health
        instance-id: ${spring.application.name}-${spring.cloud.client.hostname}-${server.port}

    gateway:
      routes:
        # 首頁路由到 Next.js
        - id: frontend-homepage
          uri: http://localhost:3000 # Next.js 頁面
          predicates:
            - Path=/ # 根路徑
          filters:
            - RewritePath=/, / # 重寫根路徑以匹配 Next.js 頁面
        # 授權伺服器路由
        - id: authn-service
          uri: lb://authn-service # 通過負載均衡器指向 authn-service
          predicates:
            - Path=/authn/** # 路徑匹配
          filters:
            - StripPrefix=1 # 去掉路徑前綴 /authn
            - RedirectUriValidationFilter # 自定義過濾器，用於檢查 `redirect_uri`
        # 授權檢查服務路由
        - id: authz-service
          uri: lb://authz-service
          predicates:
            - Path=/authz/** # 路徑匹配
          filters:
            - StripPrefix=1 # 去掉路徑前綴 /authz
        # 權限處理服務路由
        - id: authp-service
          uri: lb://authp-service
          predicates:
            - Path=/authp/** # 路徑匹配
          filters:
            - StripPrefix=1 # 去掉路徑前綴 /authp
        # 待辦事項服務路由
        - id: todo-service
          uri: lb://todo-service
          predicates:
            - Path=/todo/** # 路徑匹配
          filters:
            - StripPrefix=1 # 去掉路徑前綴
        # 黑名單服務路由
        - id: blacklist-service
          uri: lb://blacklist-service
          predicates:
            - Path=/blacklist/**
          filters:
            - StripPrefix=1

  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=500,expireAfterWrite=10m # Cache 初始容量、最大容量與過期時間配置

  data:
    redis:
      host: ${REDIS_HOST:localhost} # 動態化 Redis 主機，支持多環境配置
      port: ${REDIS_PORT:6379}      # Redis 默認端口
      password: ${REDIS_PASSWORD:}  # Redis 密碼（如果有）
      lettuce:
        pool:
          max-active: 50      # 最大連接數
          max-idle: 15        # 最大空閒連接數
          min-idle: 5         # 最小空閒連接數
          max-wait: 2000ms    # 連接等待時間
      timeout: 2000ms

auth:
  service:
    base-url: ${AUTH_SERVICE_BASE_URL:lb://authn-service} # 動態配置 lb://authn-service URL

app:
  security:
    redirect-validation-paths:
      - "/authn/oauth"
    allowed-redirect-uris:
      - "http://localhost:8080/authn/oauth/callback" # 後端的回調地址
      - "http://localhost:8080/oauth/callback"       # 後端的回調地址
      - "http://localhost:8080/authn/jwks/publicKey" # JWK 公鑰地址
      - "http://localhost:8080/jwks/publicKey"       # 公鑰地址
      - "http://localhost:3000/"                    # 前端的跳轉地址
  public-paths:
    - "/favicon.ico"
    - "/actuator/health"
    - "/actuator/prometheus"
    - "/public/**"
    - "/static/**"
    - "/authn/jwks/publicKey"
    - "/jwks/publicKey"
    - "/.well-known/**"
    - "/authn/.well-known/**"
    - "/oauth2/authorization/**"
    - "/authn/oauth/login"
    - "/authn/oauth/callback"
    - "/authn/actuator/health"
    - "/oauth/login"
    - "/oauth/callback"
    - "/authorize"
    - "/token"

cors:
  allowed-origins:
    - "http://localhost:3000" # 允許前端開發時的跨域訪問
    - "http://127.0.0.1:3000" # 本地調試時的跨域訪問
    - "http://127.0.0.1:8080" # 本地後端的跨域訪問
    - "http://localhost:8080" # 本地後端的跨域訪問
    - "https://member.vikosmos.com" # 測試環境的前端域名
  allowed-methods:
    - "GET"
    - "POST"
    - "OPTIONS"
  allowed-headers:
    - "Authorization"
    - "Content-Type"