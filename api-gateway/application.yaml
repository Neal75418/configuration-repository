server:
  address: 0.0.0.0
  port: 8080 # 微服務端口，用於本地開發和測試

spring:
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}-${server.port}

  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=500,expireAfterWrite=10m # 緩存初始化容量為 100，最大容量為 500，寫入後 10 分鐘過期

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    urls:
      - name: GSS.Vital.AuthNService
        url: /authn/v3/authn-docs
      - name: GSS.Vital.AuthPService
        url: /authp/v3/authp-docs
#      - name: authz
#        url: /authz/v3/api-docs
      - name: GSS.Vital.BlacklistService
        url: /blacklist/v3/blacklist-docs
#      - name: todo
#        url: /todo/v3/api-docs
      - name: GSS.Vital.BizFormAPIService
        url: /bizform/swagger/v1/swagger.json
      - name: GSS.Vital.MailService
        url: /mail/swagger/v1/swagger.json

auth:
  service:
    base-url: ${AUTH_SERVICE_BASE_URL:lb://authn-service} # 動態配置授權服務 URL

authn:
  internal-base-url: http://authn-service # 📡 Gateway 呼叫 AuthN 微服務的內部 URL（供 callback token 換取 access token 使用）

blacklist:
  service:
    # 黑名單服務的名稱
    # 這個名稱應與服務註冊中心（如 Eureka、Consul 或 Kubernetes）中定義的服務名稱一致
    name: blacklist-service

    # 黑名單檢查的 API 路徑
    # 該路徑會附加到黑名單服務的基礎 URL，例如：http://blacklist-service/blacklist/check
    check-path: /blacklist/check

    # 請求黑名單服務的超時時間（以秒為單位）
    # 當超過該時間沒有響應時，請求將被視為失敗
    timeout: 5

app:
  bizform:
    query-path: /bizform/api/Documents/Query # BizForm 查詢 API 路徑
  security:
    redirect-validation-paths:
      - "/authn/oauth" # OAuth 驗證的跳轉路徑
    allowed-redirect-uris:
      - "http://localhost:8080/authn/oauth/callback"           # DEV - 本地開發時 OAuth 授權回調端點（後端處理授權碼）
      - "https://cb-svc-api.vitalext.com/authn/oauth/callback" # STAGING / PROD - 上線環境後端處理 OAuth 授權碼的回調端點

    # ------------------------------------------------------------
    # permit-all : 進入 Gateway 時「免 Spring-Security 認證」，
    #              但依然會通過 InternalTokenFilter 驗證 JWT 與基本授權。
    #              ➜ 未攜帶有效 JWT 則返回 401。
    #              ➜ 適用於登入後可直接存取，但不需再進入 Spring Security 的路徑。
    # ------------------------------------------------------------
    permit-all:
      # 👉 提供使用者以系統 JWT 換取 BizForm 專用 JWT
      - /authn/oauth/token/exchange

      # 👉 處理使用者登出，清除黑名單、Cookie 與快取資訊
      - /authn/oauth/logout

      # 👉 提供 iframe 專用的 callback token，供外部畫面回打系統 API 使用
      #     ⚠️ 須驗證系統 JWT，確認權限與租戶合法性
      - /authn/callback-token

      # 👉 微服務間通訊使用的 Internal Token 簽發 API
      #     ⚠️ 僅允許受信任的內部服務呼叫（通常以 JWT 或 API Key 驗證）
      - /authn/internal-token

      # 👉 權限授權服務，包含角色、資源權限驗證等查詢操作
      - /authz/**

      # 👉 權限與租戶設定服務（建立、更新、刪除等）
      - /authp/**

      # 👉 JWT 黑名單管理，支援黑名單查詢與快取同步
      - /blacklist/**

      # 👉 Todo 管理 API（範例服務）
      - /todo/**

      # 👉 BizForm 提報、同步等專用 API，需驗系統 JWT 與角色、地區權限
      - /bizform/**

      # 👉 家系圖服務，包含成員關係管理與查詢
      - /genogram/**

      # 👉 mail服務，發信功能
      - /mail/**

cors:
  allowed-origins:
    - "http://localhost:7001"                    # DEV - 前端本地開發環境（通常使用 Vite/React 本地啟動）
    - "https://cb-svc-web.vitalcb.com"           # SIT - VitalCaseBridge 前端測試環境（SIT 測試使用）
    - "https://cb-svc-web.vitalext.com"          # UAT - VitalCaseBridge 前端測試環境（UAT 測試使用）
    - "https://member.vikosmos.com"              # DEV - BizForm 測試環境（用於表單服務簽核測試）
    - "https://bizform.vitalyun.com"             # UAT - BizForm 正式環境（實際對外簽核服務）
    - "https://cloud-member.gss.com.tw"          # DEV - 帳號中心測試環境（OAuth 登入與授權測試）
    - "https://member.gsscloud.com"              # UAT - 帳號中心正式環境（實際登入與授權來源）
    - "https://demo.genogram.cloud"              # DEV - 家系圖嵌入 iframe 頁面來源（iframe 載入允許跨域）
  allowed-methods:
    - "GET"       # 查詢資源
    - "POST"      # 建立資源
    - "PUT"       # 更新整個資源
    - "DELETE"    # 刪除資源
    - "OPTIONS"   # 預檢請求（瀏覽器自動發出，用於 CORS 驗證）
    - "PATCH"     # 更新部分欄位（部分修改資源，RESTful 常見）

  allowed-headers:
    - "Authorization"       # JWT 或 OAuth Token 驗證用
    - "Content-Type"        # 請求格式聲明，例如 application/json
    - "Refresh-Token"       # Refresh Token，用於換發 access token
    - "X-Current-Page"      # 分頁：目前頁數（前端自定義 header）
    - "X-Page-Size"         # 分頁：每頁資料量
    - "X-Total-Count"       # 分頁：總筆數（多用於 response header，但保留允許請求端帶入）
    - "X-Requested-With"    # Ajax 請求識別（例如 XMLHttpRequest，某些 UI 框架會自帶）
    - "Accept"              # 接受的回應格式，例如 application/json、text/html 等