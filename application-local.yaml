spring:
  cloud:
    loadbalancer:
      cache:
        enabled: true # 啟用負載均衡器的緩存功能
    consul:
      discovery:
        health-check-interval: 30s # 健康檢查間隔
        health-check-timeout: 15s # 健康檢查超時

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus,info"  # 僅暴露必要的端點
      base-path: /actuator                 # 管理端點的基路徑
  endpoint:
    health:
      access: read-only                  # 啟用讀取存取（GET）
      show-details: when-authorized      # 有授權角色才顯示詳細資訊
      roles: SYSTEM_ADMIN                # ✅ 指定角色（你 DB 裡的 code）

logging:
  level:
    root: DEBUG  # ✅ 全域 DEBUG 開著，方便 trace 問題
    com.gss: DEBUG  # ✅ 自家業務碼開著
    org.springframework: INFO  # Spring 大部分元件就給 INFO 就好

    # ☁️ Spring Cloud 噪音源
    org.springframework.cloud.config.server.environment.NativeEnvironmentRepository: WARN
    org.springframework.cloud.consul.discovery.ConsulCatalogWatch: WARN

    # 🔐 Spring Security 降噪
    org.springframework.security.web: INFO
    org.springframework.security: INFO

    # 🌐 Web 層降噪
    org.springframework.web: INFO
    org.springframework.web.reactive: INFO
    org.springframework.http.codec: INFO

    # ☎️ RMI 系列降噪
    sun.rmi.transport.tcp: WARN
    javax.management.remote.rmi: WARN

    # 🧼 Apache HttpClient 降噪
    org.apache.http: WARN
    org.apache.http.wire: OFF
    org.apache.http.headers: OFF
    org.apache.http.impl.conn: WARN
    org.apache.http.impl.execchain: WARN
    org.apache.http.client: WARN
    org.apache.http.client.protocol: WARN
    org.apache.http.impl.client: WARN
    org.apache.http.impl.nio.client: WARN
    org.apache.http.impl.nio.conn: WARN

    # 🔥 Redis Lettuce 降噪
    io.lettuce.core: WARN
    org.springframework.data.redis: INFO

    # 🚦 Reactor Netty 降噪
    reactor.netty: INFO
    reactor.netty.http.server: INFO
    reactor.netty.http.client: INFO

    # 🆕 關掉 JDK/JUL 噪音
    jdk.event.security: OFF
    jdk.event: OFF
    java.security: OFF

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"