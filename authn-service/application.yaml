server:
  port: 8081

spring:
  cloud:
    consul:
      discovery:
        prefer-ip-address: true # 🌐 優先使用 IP 註冊與健康檢查
        health-check-path: /actuator/health # ❤️ 健康檢查端點路徑
        ip-address: ${SERVICE_IP:${spring.cloud.client.ip-address}} # 🧭 服務 IP，優先用環境變數覆寫
        service-name: ${spring.application.name}  # 🏷️ 服務名稱（註冊到 Consul）
        instance-id: ${spring.application.name}-${server.port}  # 🔢 實例 ID，避免埠號衝突

  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=500,expireAfterWrite=10m # Cache 初始容量、最大容量與過期時間配置

authn:
  token:
    # M2M token 發行端點（經 Gateway，🤖）
    url: ${AUTHN_TOKEN_URL:http://api-gateway/authn/oauth2/token}

  # M2M 目標（Tenant/ AuthP）（🤖）
  m2m:
    targets:
      tenant-read:
        audience: tenant-service
        scope: tenant.read tenant.bizform.read
        targetService: tenant-service
      tenant-write:
        audience: tenant-service
        scope: tenant.read tenant.write
        targetService: tenant-service
      authp-read:
        audience: authp-service
        scope: authp.read
        targetService: authp-service

  client: # M2M 客戶端認證方式（🤖）
    id: ${AUTHN_CLIENT_ID:authn-service}
    auth-method: ${AUTHN_CLIENT_AUTH_METHOD:secret}   # secret | private_key_jwt（🤖）
    client-auth: ${AUTHN_CLIENT_AUTH_IN:header}       # header=Basic | body=form（🤖）
    secret: ${AUTHN_CLIENT_SECRET:}                   # 非 prod 可給（🤖）

  # InMemory RegisteredClient（由 OAuthClientConfig 讀）（🤖 各機器客戶端）
  clients:
    authn-service:
      secret-hash: ${AUTHN_SECRET_HASH}
    authp-service:
      secret-hash: ${AUTHP_SECRET_HASH}
    reporting-service:
      secret-hash: ${REPORTING_SECRET_HASH}

  # 內部 HTTP 逾時（🤖 常用於內部交換）
  http:
    timeout:
      connect-ms: 5000                            # 連線逾時（毫秒）
      read-ms: 5000                               # 讀取逾時（毫秒）

# optional：外部 RT timeout（外部系統，👤/🤖 依呼叫場景）
external:
  http:
    timeout:
      connect-ms: 10000
      read-ms: 30000

# 內部服務位址（👤/🤖 都可能呼叫）
authp:
  internal-base-url: http://authp-service

tenant:
  internal-base-url: http://tenant-service    # 🌐 內部 Tenant 服務基底 URL
  api-prefix: /directory                      # 🛣️ API 前綴路徑
  api-paths:                                  # 🔗 各功能端點設定
    users-tenants: /users/{userId}/tenants    # 👥 查使用者可切換的租戶清單
    tenant-by-id: /tenants/{tenantId}         # 🏷️ 依租戶 ID 查租戶詳情
    tenant-user: /tenants/{tenantId}/users/{userId}   # 🔍 檢查使用者是否屬於租戶
    tenant-bizform: /tenants/{tenantId}/bizform       # 🧩 查租戶的 BizForm depotid

app:
  security:
    public-paths:
      # ---------- 🌐 靜態資源 ----------
      - "/public/**"            # 前端靜態檔 (JS / CSS / img)
      - "/static/**"            # 傳統 static 目錄
      - "/favicon.ico"          # 網站 icon

      # ---------- 🔍 健康 / 監控 ----------
      - "/actuator/health"      # 健康檢查
      - "/actuator/prometheus"  # Prometheus 指標

      # ---------- 🔑 OIDC / JWT 相關（👤 使用者登入 & 公鑰/發現文件） ----------
      - "/authn/.well-known/**" # OIDC Discovery (AuthN 路徑)
      - "/authn/jwks/publicKey" # JWK public key (AuthN 路徑)
      - "/.well-known/**"       # OIDC Discovery root fallback
      - "/jwks/publicKey"       # JWK root fallback
      - "/authn/oauth/login"    # OAuth2 login
      - "/authn/oauth/callback" # OAuth2 callback
      - "/oauth/login"          # 通用 login fallback
      - "/oauth/callback"       # 通用 callback fallback
      - "/oauth2/authorization/**" # Spring Security OIDC 端點

      # ---------- 📄 Swagger / OpenAPI ----------
      - "/swagger-ui.html"      # Swagger UI
      - "/swagger-ui/**"        # Swagger 靜態資源
      - "/v3/authn-docs"        # AuthN 自訂 docs 入口

    # AuthN 用：SecurityConfig 中放行的 API
    permit-all:
      - "/authn/oauth2/token"        # 給經過 Gateway 的呼叫
      - "/oauth2/token"              # 給直打 AuthN 的呼叫（StripPrefix 之後）
      - "/oauth/token/exchange"     # 系統 JWT 換 BizForm 專用 JWT
      - "/oauth/token/exchange-callback"  # 給 API Gateway 換 token 用
      - "/oauth/logout"             # 👤 登出
      - "/oauth/refresh-token"      # 👤 以 refresh 換 access
      - "/oauth/me"                 # 👤 查詢自己
      - "/callback-token"           # 👤 iframe/回調場景
      - "/internal-token"           # 🤖 微服務 internal token（僅測試/內部）