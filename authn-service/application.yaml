server:
  address: 0.0.0.0
  port: 8081

spring:
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}-${server.port}

  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=500,expireAfterWrite=10m # Cache 初始容量、最大容量與過期時間配置

static:
  resources:
    cache:
      period: 3600

authn:
  token:
    url: ${AUTHN_TOKEN_URL:http://api-gateway/authn/oauth2/token}  # M2M token 發行端點（可經 Gateway）

  m2m:
    targets:
      tenant-read:
        audience: tenant-service
        scope: tenant.read
      tenant-write:
        audience: tenant-service
        scope: tenant.read tenant.write
      authp-read:
        audience: authp-service
        scope: authp.read

    target: tenant-read
    scope-override:

  client:
    id: ${AUTHN_CLIENT_ID:authn-service}
    auth-method: ${AUTHN_CLIENT_AUTH_METHOD:secret}   # secret | private_key_jwt
    client-auth: ${AUTHN_CLIENT_AUTH_IN:header}       # header=Basic | body=form
    secret: ${AUTHN_CLIENT_SECRET:}                   # dev/staging 才會給

  clients: # InMemory RegisteredClient 用（由 OAuthClientConfig 讀）
    authn-service:
      secret-hash: ${AUTHN_SECRET_HASH}
    authp-service:
      secret-hash: ${AUTHP_SECRET_HASH}
    reporting-service:
      secret-hash: ${REPORTING_SECRET_HASH}

  # HTTP 連線參數（M2M 發 Token 或內部呼叫的逾時）
  http:
    timeout:
      connect-ms: 5000                            # 連線逾時（毫秒）
      read-ms: 5000                               # 讀取逾時（毫秒）

# optional：外部 RT timeout
external:
  http:
    timeout:
      connect-ms: 10000
      read-ms: 30000

authp:
  internal-base-url: http://authp-service   # 服務註冊名或內部 DNS（建議 @LoadBalanced 解析）
  user-uri-prefix: /users                   # 使用者 API 前綴（如 /users/{id}/roles）

app:
  security:
    public-paths:
      # ---------- 🌐 靜態資源 ----------
      - "/public/**"            # 前端靜態檔 (JS / CSS / img)
      - "/static/**"            # 傳統 static 目錄
      - "/favicon.ico"          # 網站 icon

      # ---------- 🔍 健康 / 監控 ----------
      - "/actuator/health"      # 健康檢查
      - "/actuator/prometheus"  # Prometheus 指標

      # ---------- 🔑 OIDC / JWT 相關 ----------
      - "/authn/.well-known/**" # OIDC Discovery (AuthN 路徑)
      - "/authn/jwks/publicKey" # JWK public key (AuthN 路徑)
      - "/.well-known/**"       # OIDC Discovery root fallback
      - "/jwks/publicKey"       # JWK root fallback
      - "/authn/oauth/login"    # OAuth2 login
      - "/authn/oauth/callback" # OAuth2 callback
      - "/oauth/login"          # 通用 login fallback
      - "/oauth/callback"       # 通用 callback fallback
      - "/oauth2/authorization/**" # Spring Security OIDC 端點

      # ---------- 📄 Swagger / OpenAPI ----------
      - "/swagger-ui.html"      # Swagger UI
      - "/swagger-ui/**"        # Swagger 靜態資源
      - "/v3/authn-docs"        # AuthN 自訂 docs 入口

    # AuthN 用：SecurityConfig 中放行的 API
    permit-all:
      - "/authn/oauth2/token"        # 給經過 Gateway 的呼叫
      - "/oauth2/token"              # 給直打 AuthN 的呼叫（StripPrefix 之後）
      - "/oauth/token/exchange"     # 系統 JWT 換 BizForm 專用 JWT
      - "/oauth/token/exchange-callback"  # 給 API Gateway 換 token 用
      - "/oauth/logout"             # 使用者登出
      - "/oauth/refresh-token"      # 刷新 access token
      - "/oauth/me"                 # 取得使用者資訊
      - "/callback-token"           # 簽發 iframe callback token
      - "/internal-token"           # 簽發微服務 internal token