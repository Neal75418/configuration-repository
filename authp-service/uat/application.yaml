JWT_JWK_SET_URI: http://api-gateway:8080/authn/jwks/publicKey

spring:
  cloud:
    consul:
      discovery:
        healthCheckUrl: http://authp-service:${server.port}/actuator/health
        ip-address: ${SERVICE_IP:${spring.cloud.client.ip-address}}

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWK_SET_URI:http://api-gateway:8080/authn/jwks/publicKey}

  datasource: # 數據源配置
    url: jdbc:mysql://${MYSQL_HOST:mysql}:${MYSQL_PORT:3306}/vitalcasebridge # MySQL 地址
    username: ${MYSQL_USERNAME:root} # 數據庫用戶名，動態化設置
    password: ${MYSQL_PASSWORD:} # 數據庫密碼，建議通過環境變數配置
    driver-class-name: com.mysql.cj.jdbc.Driver # MySQL 驅動類

  jpa: # JPA 和 Hibernate 配置
    properties:
      hibernate:
        show_sql: true # 顯示 SQL 語句（開發環境開啟）
        format_sql: true # 格式化 SQL 語句（開發環境開啟）
    hibernate:
      ddl-auto: validate # 生產環境建議使用 none
    open-in-view: false # 禁用 Open Session In View，以提升性能

  data:
    redis: # Redis 配置
      host: ${REDIS_HOST:auth_redis} # Redis 主機地址
      port: ${REDIS_PORT:6379} # Redis 埠號
      password: ${REDIS_PASSWORD:} # Redis 密碼（如果有則填寫）
      timeout: 5s  # 設定連線超時為 5 秒
      lettuce:
        pool:
          max-active: 50      # 最大連接數
          max-idle: 15        # 最大空閒連接數
          min-idle: 5         # 最小空閒連接數
          max-wait: 2000ms    # 連接等待時間

# ⚙️ CaseBridge | Tenant Provisioning 設定
provisioning:
  intake:
    # Controller 的「Intake 寬鬆模式」主開關
    # - 開啟：空/壞 JSON 也回 200，並回顯/記錄原始請求（僅 SIT/UAT 使用）
    # - 關閉：照正常嚴格驗證，無效請求回 400
    # @Value("${provisioning.intake.enabled:false}")
    enabled: true

    probe:
      # Ingress 探針（Filter）開關
      # - 開啟：在 Security 前就攔下請求做審計記錄，連 401/403 也能看到原文
      # - 關閉：不做前置記錄
      # @Value("${provisioning.intake.probe.enabled:false}")
      enabled: true

      # 探針可記錄的 Request Body 最大位元組數（超過即截斷，避免被大包炸死）
      # @Value("${provisioning.intake.probe.maxBody:8192}")
      maxBody: 8192  # 8 KiB

test:
  depot-id: ee197c49e2e9449c8b48874a45a1611d

springdoc:
  swagger-ui:
    enabled: false       # 關閉 Swagger UI 頁面（/swagger-ui.html），避免在生產環境暴露 API 文件
  api-docs:
    enabled: false       # 關閉 OpenAPI JSON 文件（/v3/api-docs），防止 API schema 外洩

# 指定使用 log4j2-logstash.xml 作為 logging 設定檔，啟用 Logstash 輸出
logging:
  config: classpath:log4j2-logstash.xml