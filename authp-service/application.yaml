server:
  address: 0.0.0.0
  port: 8082

spring:
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}-${server.port}

  cache:
    caffeine:
      spec: initialCapacity=100,maximumSize=500,expireAfterWrite=10m # Cache 初始容量、最大容量與過期時間配置

  # 供 MultiTenant provider 取連線用（Boot 不直接管理 DataSource）
  datasource:
    host: ${MYSQL_HOST:localhost}
    port: ${MYSQL_PORT:3306}
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:}

  jpa:
    properties:
      hibernate.show_sql: false       # 線上關閉 SQL log
      hibernate.format_sql: true
    hibernate.ddl-auto: validate      # 僅驗 schema；建議由 Flyway/Liquibase 管理
    open-in-view: false               # 關閉 OIV 避免懶載入踩雷

authn:
  token:
    url: ${AUTHN_TOKEN_URL:http://api-gateway/authn/oauth2/token}  # 發 token 端

  client:
    id: ${AUTHN_CLIENT_ID:authp-service}              # 在 AuthN 註冊的 client_id
    secret: ${AUTHN_CLIENT_SECRET:}                   # 用環境變數或 Secret 注入
    auth-method: ${AUTHN_CLIENT_AUTH_METHOD:secret}   # secret | private_key_jwt（你用 secret）
    client-auth: ${AUTHN_CLIENT_AUTH_IN:header}       # header(Basic) | body(form)
  audience: ${AUTHN_AUDIENCE:tenant-service}          # 這顆 token 要打的下游服務（ex: tenant-service）
  scope: ${AUTHN_SCOPE:tenant.read}                   # 最小必要權限

authp:
  http:
    timeout:
      connect-ms: 5000   # 連線建立逾時（毫秒）
      read-ms: 5000      # 讀取回應逾時（毫秒）

external:
  http:
    timeout:
      connect-ms: 10000  # 對外部服務連線逾時
      read-ms: 30000     # 對外部服務讀取逾時

# MultiTenant provider 透過 Gateway 取得 DBInfo
gateway:
  machine-token:
    target: tenant-read  # 申請 M2M token 的 target_service（避免簽發端 fallback）
  base-url: http://api-gateway:8080  # Gateway 基底位址
tenant:
  dbinfo-path: /tenant/api/tenants/%s  # DBInfo 路徑，使用 tenantId 格式化

internal:
  token:
    expected-audience: authp-service           # TenantFilter 用於判斷「內部 token」

app:
  mt:
    jdbc:
      sslMode: REQUIRED                 # dev 可覆蓋為 DISABLED
      extra: ""                         # dev 可覆蓋 allowPublicKeyRetrieval=true
  security:
    public-paths:
      # ---------- 🔍 健康 / 監控 ----------
      - "/actuator/health"        # 健康檢查 (readiness / liveness)
      - "/actuator/prometheus"    # Prometheus 指標

      # ---------- 👤 用戶前置查詢 ----------
      - "/users/*/default-tenant"              # 取預設租戶（登入前呼叫）
      - "/users/*/details"                     # 取用戶詳情（建立 JWT 時用）
      - "/permissions/internal/permissions/*"  # 查詢使用者權限（建立快取用，登入流程會呼叫

      # ---------- 📄 Swagger / OpenAPI ----------
      - "/swagger-ui.html"        # Swagger UI
      - "/swagger-ui/**"          # Swagger 靜態資源
      - "/v3/authp-docs"          # AuthP 自訂 docs 入口

invite-user-setting:
  case-bridge-url: https://cb-svc-web.vitalcb.com
  vital-login-url: https://member.vikosmos.com/cas/login?service=https://www.vikosmos.com/tw/&locale=zh