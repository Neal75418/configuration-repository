server:
  port: 8080

spring:
  security:
    oauth2:
      client:
        registration:
          oauth:
            client-id: oauth
            client-secret: secret
            scope: email, family_name, first_name, verified_email
            authorization-grant-type: authorization_code
            redirect-uri: "https://localhost:8086/login/oauth2/code/oauth"
            client-name: AuthBridge Service
        provider:
          oauth:
            authorization-uri: https://member.vikosmos.com/cas/oauth/authorize
            token-uri: https://member.vikosmos.com/cas/oauth/token
            user-info-uri: https://member.vikosmos.com/cas/oauth/userinfo
            user-name-attribute: email
  cloud:
    gateway:
      routes:
        - id: homepage
          uri: http://localhost:3000 # 指向你的 Next.js 應用
          predicates:
            - Path=/**
          filters:
            - PreserveHostHeader
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
          filters:
            - StripPrefix=1
        - id: profile-service
          uri: lb://profile-service
          predicates:
            - Path=/profile-service/**
          filters:
            - StripPrefix=1
        - id: auth-server
          uri: lb://auth-server
          predicates:
            - Path=/auth-server/**
          filters:
            - StripPrefix=1
      default-filters:
        - AddRequestHeader=X-Forwarded-For, '{remoteAddress}'
        - RemoveResponseHeader=Server
        - name: TokenRelay # 傳遞 Access Token，適用於 OAuth2

management:
  endpoints:
    web:
      exposure:
        include: prometheus
  endpoint:
    health:
      show-details: "always"